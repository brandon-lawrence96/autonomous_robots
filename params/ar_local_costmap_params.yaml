local_costmap:

  footprint: [[1.00, -0.70], [-1.00, -0.70], [-1.00, 0.65], [1.00, 0.65]]
  #footprint: [[0.55, -0.32], [-0.55, -0.33], [-0.55, 0.32], [0.55, 0.32]]

  global_frame: odom
  robot_base_frame: base_footprint
  static_map: false
  rolling_window: true

  update_frequency: 2.0    #5.0
  publish_frequency: 10.0      #2.0
  transform_tolerance: 0.5  

  width: 3.0     #5.5
  height: 3.0    #5.5
  resolution: 0.05    #0.1
  
  plugins:
  #- {name: static_layer,            type: "costmap_2d::StaticLayer"}
   - {name: obstacle_layer,          type: "costmap_2d::VoxelLayer"}
   - {name: inflation_layer,         type: "costmap_2d::InflationLayer"}

  obstacle_layer:
    enabled: true
    track_unknown_space: true
    combination_method: 1
    #The cost at which a cell is considered an obstacle when a map is read from the map_server
    lethal_cost_threshold: 100
    obstacle_timeout: 0.5
    
    observation_sources: scan pointcloud
    scan: {sensor_frame: velodyne, data_type: LaserScan, topic: /velodyne/scan, marking: true, clearing: true, obstacle_range: 3.0, raytrace_range: 4.0}
    pointcloud: {sensor_frame: velodyne, data_type: PointCloud2, topic: /velodyne_points, marking: true, clearing: true, obstacle_range: 3.0, raytrace_range: 4.0, min_obstacle_height: 0.05}

  inflation_layer:
    enabled:              true
    cost_scaling_factor:  3.0       #10.0  # exponential rate at which the obstacle cost drops off (default: 10)
    #inflation_radius:     0.2
    inflation_radius:     0.7   #0.4  # max. distance from an obstacle at which costs are incurred for planning paths.